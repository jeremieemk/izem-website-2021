{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/51-izem-website-2021/pages/work/index.js\";\nimport Prismic from \"prismic-javascript\";\nimport Head from \"next/head\";\nimport PostPreviewList from \"../components/PostPreviewList\";\nexport default function Work(props) {\n  console.log(\"index page\", props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"preload\",\n        as: \"font\",\n        href: \"/fonts/bentonsansregular.otf\",\n        type: \"font/otf\",\n        crossorigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"iZem -- Work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), props.blogPosts && /*#__PURE__*/_jsxDEV(PostPreviewList, {\n      posts: props.blogPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n}\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query( // specify the data you're querying\n  Prismic.Predicates.at(\"document.type\", \"blog-post\"), {\n    orderings: \"[my.blog-post.order desc]\"\n  });\n  const blogPosts = data.results;\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      blogPosts\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/jeremie/web/51-izem-website-2021/pages/work/index.js"],"names":["Prismic","Head","PostPreviewList","Work","props","console","log","blogPosts","getStaticProps","apiEndpoint","Client","client","data","query","Predicates","at","orderings","results","notFound"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,8BAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGA,KAAK,CAACG,SAAN,iBAAmB,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEH,KAAK,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,YAXtB;AAAA,kBADF;AAeD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGV,OAAO,CAACW,MAAR,CAAeF,WAAf,CAAf;AACA,QAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,KAAP,EACjB;AACAb,EAAAA,OAAO,CAACc,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CAFiB,EAGjB;AACEC,IAAAA,SAAS,EAAE;AADb,GAHiB,CAAnB;AAOA,QAAMT,SAAS,GAAGK,IAAI,CAACK,OAAvB;;AACA,MAAI,CAACL,IAAL,EAAW;AACT,WAAO;AACLM,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AACLd,IAAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF,KADF,CACiB;;AADjB,GAAP;AAGD","sourcesContent":["import Prismic from \"prismic-javascript\";\nimport Head from \"next/head\";\nimport PostPreviewList from \"../components/PostPreviewList\";\n\nexport default function Work(props) {\n  console.log(\"index page\", props);\n  return (\n    <>\n      <Head>\n        <link\n          rel=\"preload\"\n          as=\"font\"\n          href=\"/fonts/bentonsansregular.otf\"\n          type=\"font/otf\"\n          crossorigin=\"anonymous\"\n        ></link>\n        <title>iZem -- Work</title>\n      </Head>\n      {props.blogPosts && <PostPreviewList posts={props.blogPosts} />}\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query(\n    // specify the data you're querying\n    Prismic.Predicates.at(\"document.type\", \"blog-post\"),\n    {\n      orderings: \"[my.blog-post.order desc]\",\n    }\n  );\n  const blogPosts = data.results;\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n  return {\n    props: { blogPosts }, // will be passed to the page component as props\n  };\n}\n"]},"metadata":{},"sourceType":"module"}