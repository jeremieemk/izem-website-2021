{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/50-izem-site-2021/pages/work/[uid].js\";\nimport { useRouter } from \"next/router\";\nexport default function SinglePost(props) {\n  const router = useRouter();\n  const uid = router.query.uid;\n  console.log(\"yes\", props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 w-full\",\n    children: uid && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Post: \", uid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n} // comment amener les props dans ce composant ?\n\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const uid = context.params.uid;\n  console.log(uid);\n  const data = await Client.query( // specify the data you're querying\n  Prismic.Predicates.at(\"document.uid\", uid));\n  const blogPosts = data.results;\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      blogPosts\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/jeremie/web/50-izem-site-2021/pages/work/[uid].js"],"names":["useRouter","SinglePost","props","router","uid","query","console","log","getStaticProps","apiEndpoint","Client","Prismic","client","context","params","data","Predicates","at","blogPosts","results","notFound"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxC,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,GAAG,GAAGD,MAAM,CAACE,KAAP,CAAaD,GAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,KAAnB;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAA8BE,GAAG,iBAAI;AAAA,2BAAaA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;AACA,OAAO,eAAeI,cAAf,GAAgC;AACrC;AACA,QAAMC,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGC,OAAO,CAACC,MAAR,CAAeH,WAAf,CAAf;AACA,QAAML,GAAG,GAAGS,OAAO,CAACC,MAAR,CAAeV,GAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,QAAMW,IAAI,GAAG,MAAML,MAAM,CAACL,KAAP,EACjB;AACAM,EAAAA,OAAO,CAACK,UAAR,CAAmBC,EAAnB,CAAsB,cAAtB,EAAsCb,GAAtC,CAFiB,CAAnB;AAIA,QAAMc,SAAS,GAAGH,IAAI,CAACI,OAAvB;;AACA,MAAI,CAACJ,IAAL,EAAW;AACT,WAAO;AACLK,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AACLlB,IAAAA,KAAK,EAAE;AAAEgB,MAAAA;AAAF,KADF,CACiB;;AADjB,GAAP;AAGD","sourcesContent":["import { useRouter } from \"next/router\";\n\nexport default function SinglePost(props) {\n  const router = useRouter();\n  const uid = router.query.uid;\n  console.log(\"yes\", props);\n  return <div className=\"mt-8 w-full\">{uid && <span>Post: {uid}</span>}</div>;\n}\n\n// comment amener les props dans ce composant ?\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const uid = context.params.uid;\n  console.log(uid);\n  const data = await Client.query(\n    // specify the data you're querying\n    Prismic.Predicates.at(\"document.uid\", uid)\n  );\n  const blogPosts = data.results;\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n  return {\n    props: { blogPosts }, // will be passed to the page component as props\n  };\n}\n"]},"metadata":{},"sourceType":"module"}