{"ast":null,"code":"import { motion } from \"framer-motion\";\nimport Prismic from \"prismic-javascript\";\nimport Image from \"next/image\";\nexport default function About(props) {\n  const content = props.content;\n  console.log(props);\n  return null; // <motion.div\n  //   animate={{ opacity: 1 }}\n  //   transition={{ duration: 0.5 }}\n  //   initial={{ opacity: 0 }}\n  //   className=\"\"\n  // >\n  //   <div className=\"w-full flex justify-center\">\n  //     <div className=\"mt-8 max-w-2xl \">\n  //       <div className=\"w-2xl h-96 \">\n  //         <div className=\"relative w-full h-full \">\n  //           <Image\n  //             src={content.data.image.url}\n  //             alt=\"post-image\"\n  //             layout=\"fill\"\n  //             objectFit=\"cover\"\n  //             objectPosition=\"center center\"\n  //           />\n  //         </div>\n  //       </div>\n  //       <div>\n  //         <div className=\"mt-6\"> {RichText.render(content.data.text)} </div>\n  //       </div>\n  //     </div>\n  //   </div>\n  // </motion.div>\n}\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query( // specify the data you're querying\n  Prismic.Predicates.at(\"document.type\", \"about\"));\n  const content = data.results;\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      content\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/Users/jeremie/web/50-izem-site-2021/pages/about.js"],"names":["motion","Prismic","Image","About","props","content","console","log","getStaticProps","apiEndpoint","Client","client","data","query","Predicates","at","results","notFound"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAO,IAAP,CAHmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC;AACA,QAAMC,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGT,OAAO,CAACU,MAAR,CAAeF,WAAf,CAAf;AACA,QAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,KAAP,EACjB;AACAZ,EAAAA,OAAO,CAACa,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,OAAvC,CAFiB,CAAnB;AAIA,QAAMV,OAAO,GAAGO,IAAI,CAACI,OAArB;;AACA,MAAI,CAACJ,IAAL,EAAW;AACT,WAAO;AACLK,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AACLb,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF,CACe;;AADf,GAAP;AAGD","sourcesContent":["import { motion } from \"framer-motion\";\nimport Prismic from \"prismic-javascript\";\nimport Image from \"next/image\";\n\nexport default function About(props) {\n  const content = props.content;\n  console.log(props);\n  return null;\n  // <motion.div\n  //   animate={{ opacity: 1 }}\n  //   transition={{ duration: 0.5 }}\n  //   initial={{ opacity: 0 }}\n  //   className=\"\"\n  // >\n  //   <div className=\"w-full flex justify-center\">\n  //     <div className=\"mt-8 max-w-2xl \">\n  //       <div className=\"w-2xl h-96 \">\n  //         <div className=\"relative w-full h-full \">\n  //           <Image\n  //             src={content.data.image.url}\n  //             alt=\"post-image\"\n  //             layout=\"fill\"\n  //             objectFit=\"cover\"\n  //             objectPosition=\"center center\"\n  //           />\n  //         </div>\n  //       </div>\n  //       <div>\n  //         <div className=\"mt-6\"> {RichText.render(content.data.text)} </div>\n  //       </div>\n  //     </div>\n  //   </div>\n  // </motion.div>\n}\n\nexport async function getStaticProps() {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query(\n    // specify the data you're querying\n    Prismic.Predicates.at(\"document.type\", \"about\")\n  );\n  const content = data.results;\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n  return {\n    props: { content }, // will be passed to the page component as props\n  };\n}\n"]},"metadata":{},"sourceType":"module"}