{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/50-izem-site-2021/pages/work/[uid].js\";\nimport { useRouter } from \"next/router\";\nimport Prismic from \"prismic-javascript\";\nimport SinglePost from \"../components/SinglePost\";\nexport default function Post(props) {\n  const router = useRouter();\n  const uid = router.query.uid;\n  console.log(\"yes\", props);\n  return /*#__PURE__*/_jsxDEV(SinglePost, {\n    post: props.post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\nexport async function getStaticProps(context) {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const uid = context.params.uid;\n  console.log(uid);\n  const data = await Client.query( // specify the data you're querying\n  Prismic.Predicates.at(\"my.blog-post.uid\", uid));\n  const post = data.results;\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      post\n    } // will be passed to the page component as props\n\n  };\n}\nexport async function getStaticPaths() {\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query( // specify the data you're querying\n  Prismic.Predicates.at(\"document.type\", \"blog-post\"));\n  const posts = data.results; // generate the paths\n\n  const paths = posts.map(post => {\n    return {\n      params: {\n        uid: post.uid\n      }\n    };\n  });\n  console.log(\"paths\", paths);\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/jeremie/web/50-izem-site-2021/pages/work/[uid].js"],"names":["useRouter","Prismic","SinglePost","Post","props","router","uid","query","console","log","post","getStaticProps","context","apiEndpoint","Client","client","params","data","Predicates","at","results","notFound","getStaticPaths","posts","paths","map","fallback"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,GAAG,GAAGD,MAAM,CAACE,KAAP,CAAaD,GAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,KAAnB;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,KAAK,CAACM;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMC,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGb,OAAO,CAACc,MAAR,CAAeF,WAAf,CAAf;AACA,QAAMP,GAAG,GAAGM,OAAO,CAACI,MAAR,CAAeV,GAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,QAAMW,IAAI,GAAG,MAAMH,MAAM,CAACP,KAAP,EACjB;AACAN,EAAAA,OAAO,CAACiB,UAAR,CAAmBC,EAAnB,CAAsB,kBAAtB,EAA0Cb,GAA1C,CAFiB,CAAnB;AAIA,QAAMI,IAAI,GAAGO,IAAI,CAACG,OAAlB;;AACA,MAAI,CAACH,IAAL,EAAW;AACT,WAAO;AACLI,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AACLjB,IAAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KADF,CACY;;AADZ,GAAP;AAGD;AAED,OAAO,eAAeY,cAAf,GAAgC;AACrC,QAAMT,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGb,OAAO,CAACc,MAAR,CAAeF,WAAf,CAAf;AACA,QAAMI,IAAI,GAAG,MAAMH,MAAM,CAACP,KAAP,EACjB;AACAN,EAAAA,OAAO,CAACiB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CAFiB,CAAnB;AAIA,QAAMI,KAAK,GAAGN,IAAI,CAACG,OAAnB,CAPqC,CAQrC;;AACA,QAAMI,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAWf,IAAD,IAAU;AAChC,WAAO;AACLM,MAAAA,MAAM,EAAE;AACNV,QAAAA,GAAG,EAAEI,IAAI,CAACJ;AADJ;AADH,KAAP;AAKD,GANa,CAAd;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBe,KAArB;AACA,SAAO;AACLA,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["import { useRouter } from \"next/router\";\nimport Prismic from \"prismic-javascript\";\nimport SinglePost from \"../components/SinglePost\";\n\nexport default function Post(props) {\n  const router = useRouter();\n  const uid = router.query.uid;\n  console.log(\"yes\", props);\n  return <SinglePost post={props.post} />;\n}\n\nexport async function getStaticProps(context) {\n  // add your Prismic project\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const uid = context.params.uid;\n  console.log(uid);\n  const data = await Client.query(\n    // specify the data you're querying\n    Prismic.Predicates.at(\"my.blog-post.uid\", uid)\n  );\n  const post = data.results;\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n  return {\n    props: { post }, // will be passed to the page component as props\n  };\n}\n\nexport async function getStaticPaths() {\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query(\n    // specify the data you're querying\n    Prismic.Predicates.at(\"document.type\", \"blog-post\")\n  );\n  const posts = data.results;\n  // generate the paths\n  const paths = posts.map((post) => {\n    return {\n      params: {\n        uid: post.uid,\n      },\n    };\n  });\n  console.log(\"paths\", paths);\n  return {\n    paths,\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}